{"ast":null,"code":"import _objectWithoutProperties from \"/Users/shashankpali/Downloads/react-stripe-js-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/shashankpali/Downloads/react-stripe-js-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _excluded = [\"complete\", \"paymentMethod\"];\n\nvar _jsxFileName = \"/Users/shashankpali/Downloads/react-stripe-js-forked/src/components/demos/PaymentRequestForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this = this,\n    _s3 = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport { useStripe, PaymentRequestButtonElement } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar useOptions = function useOptions(paymentRequest) {\n  _s();\n\n  var options = useMemo(function () {\n    return {\n      paymentRequest: paymentRequest,\n      style: {\n        paymentRequestButton: {\n          theme: \"dark\",\n          height: \"48px\",\n          type: \"donate\"\n        }\n      }\n    };\n  }, [paymentRequest]);\n  return options;\n};\n\n_s(useOptions, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\nvar usePaymentRequest = function usePaymentRequest(_ref) {\n  _s2();\n\n  var options = _ref.options,\n      onPaymentMethod = _ref.onPaymentMethod;\n  var stripe = useStripe();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      paymentRequest = _useState2[0],\n      setPaymentRequest = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      canMakePayment = _useState4[0],\n      setCanMakePayment = _useState4[1];\n\n  useEffect(function () {\n    if (stripe && paymentRequest === null) {\n      var pr = stripe.paymentRequest(options);\n      setPaymentRequest(pr);\n    }\n  }, [stripe, options, paymentRequest]);\n  useEffect(function () {\n    var subscribed = true;\n\n    if (paymentRequest) {\n      paymentRequest.canMakePayment().then(function (res) {\n        if (res && subscribed) {\n          setCanMakePayment(true);\n        }\n      });\n    }\n\n    return function () {\n      subscribed = false;\n    };\n  }, [paymentRequest]);\n  useEffect(function () {\n    if (paymentRequest) {\n      paymentRequest.on(\"paymentmethod\", onPaymentMethod);\n    }\n\n    return function () {\n      if (paymentRequest) {\n        paymentRequest.off(\"paymentmethod\", onPaymentMethod);\n      }\n    };\n  }, [paymentRequest, onPaymentMethod]);\n  return canMakePayment ? paymentRequest : null;\n};\n\n_s2(usePaymentRequest, \"+6JdoGvTJblib3mAmYlFU9JQkk8=\", false, function () {\n  return [useStripe];\n});\n\nvar PaymentRequestForm = function PaymentRequestForm() {\n  _s3();\n\n  var paymentRequest = usePaymentRequest({\n    options: {\n      country: \"US\",\n      currency: \"usd\",\n      total: {\n        label: \"Demo total\",\n        amount: 1000\n      }\n    },\n    onPaymentMethod: function onPaymentMethod(_ref2) {\n      var complete = _ref2.complete,\n          paymentMethod = _ref2.paymentMethod,\n          data = _objectWithoutProperties(_ref2, _excluded);\n\n      console.log(\"[PaymentMethod]\", paymentMethod);\n      console.log(\"[Customer Data]\", data);\n      complete(\"success\");\n    }\n  });\n  var options = useOptions(paymentRequest);\n\n  if (!paymentRequest) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(PaymentRequestButtonElement, {\n    className: \"PaymentRequestButton\",\n    options: options,\n    onReady: function onReady() {\n      console.log(\"PaymentRequestButton [ready]\");\n    },\n    onClick: function onClick(event) {\n      console.log(\"PaymentRequestButton [click]\", event);\n    },\n    onBlur: function onBlur() {\n      console.log(\"PaymentRequestButton [blur]\");\n    },\n    onFocus: function onFocus() {\n      console.log(\"PaymentRequestButton [focus]\");\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s3(PaymentRequestForm, \"Bjqg2sMMxcnWfc7sSmNwU/N1sXo=\", false, function () {\n  return [usePaymentRequest, useOptions];\n});\n\n_c = PaymentRequestForm;\nexport default PaymentRequestForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentRequestForm\");","map":{"version":3,"sources":["/Users/shashankpali/Downloads/react-stripe-js-forked/src/components/demos/PaymentRequestForm.js"],"names":["React","useMemo","useState","useEffect","useStripe","PaymentRequestButtonElement","useOptions","paymentRequest","options","style","paymentRequestButton","theme","height","type","usePaymentRequest","onPaymentMethod","stripe","setPaymentRequest","canMakePayment","setCanMakePayment","pr","subscribed","then","res","on","off","PaymentRequestForm","country","currency","total","label","amount","complete","paymentMethod","data","console","log","event"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\nimport {\n  useStripe,\n  PaymentRequestButtonElement\n} from \"@stripe/react-stripe-js\";\n\nconst useOptions = paymentRequest => {\n  const options = useMemo(\n    () => ({\n      paymentRequest,\n      style: {\n        paymentRequestButton: {\n          theme: \"dark\",\n          height: \"48px\",\n          type: \"donate\"\n        }\n      }\n    }),\n    [paymentRequest]\n  );\n\n  return options;\n};\n\nconst usePaymentRequest = ({ options, onPaymentMethod }) => {\n  const stripe = useStripe();\n  const [paymentRequest, setPaymentRequest] = useState(null);\n  const [canMakePayment, setCanMakePayment] = useState(false);\n\n  useEffect(() => {\n    if (stripe && paymentRequest === null) {\n      const pr = stripe.paymentRequest(options);\n      setPaymentRequest(pr);\n    }\n  }, [stripe, options, paymentRequest]);\n\n  useEffect(() => {\n    let subscribed = true;\n    if (paymentRequest) {\n      paymentRequest.canMakePayment().then(res => {\n        if (res && subscribed) {\n          setCanMakePayment(true);\n        }\n      });\n    }\n\n    return () => {\n      subscribed = false;\n    };\n  }, [paymentRequest]);\n\n  useEffect(() => {\n    if (paymentRequest) {\n      paymentRequest.on(\"paymentmethod\", onPaymentMethod);\n    }\n    return () => {\n      if (paymentRequest) {\n        paymentRequest.off(\"paymentmethod\", onPaymentMethod);\n      }\n    };\n  }, [paymentRequest, onPaymentMethod]);\n\n  return canMakePayment ? paymentRequest : null;\n};\n\nconst PaymentRequestForm = () => {\n  const paymentRequest = usePaymentRequest({\n    options: {\n      country: \"US\",\n      currency: \"usd\",\n      total: {\n        label: \"Demo total\",\n        amount: 1000\n      }\n    },\n    onPaymentMethod: ({ complete, paymentMethod, ...data }) => {\n      console.log(\"[PaymentMethod]\", paymentMethod);\n      console.log(\"[Customer Data]\", data);\n      complete(\"success\");\n    }\n  });\n  const options = useOptions(paymentRequest);\n\n  if (!paymentRequest) {\n    return null;\n  }\n\n  return (\n    <PaymentRequestButtonElement\n      className=\"PaymentRequestButton\"\n      options={options}\n      onReady={() => {\n        console.log(\"PaymentRequestButton [ready]\");\n      }}\n      onClick={event => {\n        console.log(\"PaymentRequestButton [click]\", event);\n      }}\n      onBlur={() => {\n        console.log(\"PaymentRequestButton [blur]\");\n      }}\n      onFocus={() => {\n        console.log(\"PaymentRequestButton [focus]\");\n      }}\n    />\n  );\n};\n\nexport default PaymentRequestForm;\n"]},"metadata":{},"sourceType":"module"}